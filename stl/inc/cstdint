// cstdint standard header (core)

// Copyright (c) Microsoft Corporation.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

#pragma once
#ifndef _CSTDINT_
#define _CSTDINT_
#include <yvals_core.h>
#if _STL_COMPILER_PREPROCESSOR

#include <stdint.h>

#pragma pack(push, _CRT_PACKING)
#pragma warning(push, _STL_WARNING_LEVEL)
#pragma warning(disable : _STL_DISABLED_WARNINGS)
_STL_DISABLE_CLANG_WARNINGS
#pragma push_macro("new")
#undef new

_STD_BEGIN
using _CSTD int8_t;
using _CSTD int16_t;
using _CSTD int32_t;
using _CSTD int64_t;
using _CSTD uint8_t;
using _CSTD uint16_t;
using _CSTD uint32_t;
using _CSTD uint64_t;

using _CSTD int_least8_t;
using _CSTD int_least16_t;
using _CSTD int_least32_t;
using _CSTD int_least64_t;
using _CSTD uint_least8_t;
using _CSTD uint_least16_t;
using _CSTD uint_least32_t;
using _CSTD uint_least64_t;

using _CSTD int_fast8_t;
using _CSTD int_fast16_t;
using _CSTD int_fast32_t;
using _CSTD int_fast64_t;
using _CSTD uint_fast8_t;
using _CSTD uint_fast16_t;
using _CSTD uint_fast32_t;
using _CSTD uint_fast64_t;

using _CSTD intmax_t;
using _CSTD intptr_t;
using _CSTD uintmax_t;
using _CSTD uintptr_t;

#if _HAS_TR1_NAMESPACE
namespace _DEPRECATE_TR1_NAMESPACE tr1 {
    using _CSTD int8_t;
    using _CSTD int16_t;
    using _CSTD int32_t;
    using _CSTD int64_t;
    using _CSTD uint8_t;
    using _CSTD uint16_t;
    using _CSTD uint32_t;
    using _CSTD uint64_t;

    using _CSTD int_least8_t;
    using _CSTD int_least16_t;
    using _CSTD int_least32_t;
    using _CSTD int_least64_t;
    using _CSTD uint_least8_t;
    using _CSTD uint_least16_t;
    using _CSTD uint_least32_t;
    using _CSTD uint_least64_t;

    using _CSTD int_fast8_t;
    using _CSTD int_fast16_t;
    using _CSTD int_fast32_t;
    using _CSTD int_fast64_t;
    using _CSTD uint_fast8_t;
    using _CSTD uint_fast16_t;
    using _CSTD uint_fast32_t;
    using _CSTD uint_fast64_t;

    using _CSTD intmax_t;
    using _CSTD intptr_t;
    using _CSTD uintmax_t;
    using _CSTD uintptr_t;
} // namespace tr1
#endif // _HAS_TR1_NAMESPACE
_STD_END

#pragma pop_macro("new")
_STL_RESTORE_CLANG_WARNINGS
#pragma warning(pop)
#pragma pack(pop)

#endif // _STL_COMPILER_PREPROCESSOR
#endif // _CSTDINT_
