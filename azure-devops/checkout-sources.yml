# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

steps:
- checkout: self
  clean: true
  submodules: false
- script: |
    cd $(Build.SourcesDirectory)
    git clean --quiet -x -d -f -f
  displayName: 'Clean after checkout'
- task: PowerShell@2
  displayName: 'Get submodule SHAs'
  timeoutInMinutes: 1
  inputs:
    targetType: inline
    script: |
      cd $(Build.SourcesDirectory)
      $submoduleVarNames = [ordered]@{
        'llvm-project' = 'llvmSHAVar';
        'boost-math' = 'boostMathSHAVar';
        'benchmarks/google-benchmark' = 'googleBenchmarkSHAVar';
      }
      foreach ($submodule in $submoduleVarNames.Keys) {
        $varName = $submoduleVarNames[$submodule]
        $rawStatus = git submodule status --cached $submodule
        $sha = $rawStatus -replace '^[ \-+]([0-9a-f]+) .*$', '$1'
        Write-Host "##vso[task.setvariable variable=$varName]$sha"
      }
- script: |
    cd $(Build.SourcesDirectory)
    if not exist "llvm-project" (
      mkdir llvm-project
    )
    cd llvm-project

    if not exist ".git" (
      del /S /Q *
      git init
    )

    git remote get-url llvm
    if errorlevel 1 (
      git remote add llvm https://github.com/llvm/llvm-project.git
    )

    git fetch --filter=tree:0 --depth=1 llvm $(llvmSHAVar)
    git sparse-checkout set --cone --sparse-index libcxx/test libcxx/utils/libcxx llvm/utils/lit
    git reset --quiet --hard FETCH_HEAD
    git clean --quiet -x -d -f -f
  displayName: "Checkout LLVM source"
- script: |
    cd $(Build.SourcesDirectory)
    if not exist "boost-math" (
      mkdir boost-math
    )
    cd boost-math

    if not exist ".git" (
      del /S /Q *
      git init
    )

    git remote get-url boostorg
    if errorlevel 1 (
      git remote add boostorg https://github.com/boostorg/math.git
    )

    git fetch --filter=tree:0 --depth=1 boostorg $(boostMathSHAVar)
    git reset --quiet --hard FETCH_HEAD
    git clean --quiet -x -d -f -f
  displayName: "Checkout boost-math source"
- script: |
    cd $(Build.SourcesDirectory)/benchmarks
    if not exist "google-benchmark" (
      mkdir google-benchmark
    )
    cd google-benchmark

    if not exist ".git" (
      del /S /Q *
      git init
    )

    git remote get-url googlebenchmark
    if errorlevel 1 (
      git remote add googlebenchmark https://github.com/google/benchmark.git
    )

    git fetch --filter=tree:0 --depth=1 googlebenchmark $(googleBenchmarkSHAVar)
    git reset --quiet --hard FETCH_HEAD
    git clean --quiet -x -d -f -f
  displayName: "Checkout google benchmark source"
