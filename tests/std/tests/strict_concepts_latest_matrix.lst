# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# This file is identical to usual_latest_matrix.lst, except that all configurations include /permissive-.

RUNALL_INCLUDE .\prefix.lst
RUNALL_CROSSLIST
*	PM_CL="/w14640 /Zc:threadSafeInit- /EHsc /std:c++latest /permissive-"
RUNALL_CROSSLIST
PM_CL="/MD /D_ITERATOR_DEBUG_LEVEL=0 /Zc:noexceptTypes-"
ASAN	PM_CL="/MD /Zc:noexceptTypes- -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MD /D_ITERATOR_DEBUG_LEVEL=1"
ASAN	PM_CL="/MD -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MD /D_ITERATOR_DEBUG_LEVEL=0 /Zc:char8_t- /Zc:preprocessor"
ASAN	PM_CL="/MD /Zc:char8_t- /Zc:preprocessor -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MDd /D_ITERATOR_DEBUG_LEVEL=0 /Zc:wchar_t-"
ASAN	PM_CL="/MDd /Zc:wchar_t- -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MDd /D_ITERATOR_DEBUG_LEVEL=1"
ASAN	PM_CL="/MDd -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MDd /D_ITERATOR_DEBUG_LEVEL=2 /fp:except /Zc:preprocessor"
ASAN	PM_CL="/MDd /fp:except /Zc:preprocessor -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MT /D_ITERATOR_DEBUG_LEVEL=0"
ASAN	PM_CL="/MT -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MT /D_ITERATOR_DEBUG_LEVEL=0 /analyze:only /analyze:autolog-"
ASAN	PM_CL="/MT /analyze:only /analyze:autolog- -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MT /D_ITERATOR_DEBUG_LEVEL=1"
# No corresponding ASAN config, since the above differs from another config only in IDL
PM_CL="/MTd /D_ITERATOR_DEBUG_LEVEL=0 /fp:strict"
ASAN	PM_CL="/MTd /fp:strict -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MTd /D_ITERATOR_DEBUG_LEVEL=1"
ASAN	PM_CL="/MTd -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/MTd /D_ITERATOR_DEBUG_LEVEL=2"
# No corresponding ASAN config, since the above differs from another config only in IDL
PM_CL="/MTd /D_ITERATOR_DEBUG_LEVEL=2 /analyze:only /analyze:autolog-"
ASAN	PM_CL="/MTd /analyze:only /analyze:autolog- -fsanitize=address /Zi" PM_LINK="/debug"
PM_CL="/BE /c /MD"
PM_CL="/BE /c /MTd"
PM_COMPILER="clang-cl" PM_CL="-fno-ms-compatibility -fno-delayed-template-parsing -Wno-unqualified-std-cast-call /MD"
PM_COMPILER="clang-cl" PM_CL="-fno-ms-compatibility -fno-delayed-template-parsing -Wno-unqualified-std-cast-call /MTd /fp:strict"
PM_COMPILER="clang-cl" PM_CL="-fno-ms-compatibility -fno-delayed-template-parsing -Wno-unqualified-std-cast-call /MT /fp:strict -fsanitize=undefined -fno-sanitize-recover=undefined"
