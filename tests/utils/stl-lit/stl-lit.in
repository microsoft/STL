#!/usr/bin/env python
# -*- coding: utf-8 -*-

#===----------------------------------------------------------------------===##
#
# Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
#===----------------------------------------------------------------------===##

import os
import sys

config_map = {}

def map_config(source_dir, site_config):
    global config_map
    source_dir = os.path.realpath(source_dir)
    source_dir = os.path.normcase(source_dir)
    site_config = os.path.normpath(site_config)
    config_map[source_dir] = site_config

# Make sure we can find the lit package.
sys.path.insert(0, os.path.join("@LLVM_SOURCE_DIR@", 'utils', 'lit'))

@STL_LIT_CONFIG_MAP@

builtin_parameters= {}
builtin_parameters['config_map'] = config_map

def assert_target_arch_and_platform_equal():
    import os
    first_lit_cfg = next(iter(builtin_parameters['config_map'].values()))
    target_arch = ''
    platform = os.getenv('Platform', default='')
    # Do nothing if "Platform" is not defined.
    if platform != '':
        with open(first_lit_cfg, 'r') as file:
            for line in file:
                if 'lit_config.target_arch =' in line:
                    words = line.split()
                    target_arch = words[-1].strip('\'')
                    break
        # arm64ec doesn't have its own command prompt with Platform.
        if target_arch == 'arm64ec':
            target_arch = 'arm64'
        if platform != target_arch:
            print('The architecture of the compiler and STL does not match')
            exit(1)

if __name__=='__main__':
    assert_target_arch_and_platform_equal()
    from lit.main import main
    main(builtin_parameters)
