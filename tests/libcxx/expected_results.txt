# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# *** ISSUES REPORTED/KNOWN UPSTREAM ***
# Non-Standard regex behavior.
# "It seems likely that the test is still non-conforming due to how libc++ handles the 'w' character class."
std/re/re.traits/lookup_classname.pass.cpp FAIL

# These tests are extremely slow, taking over 23 minutes to execute (in debug mode, non-optimized).
# They contain 10K^2 / 2 == 50M loops.
std/input.output/iostreams.base/ios.base/ios.base.storage/iword.pass.cpp SKIPPED
std/input.output/iostreams.base/ios.base/ios.base.storage/pword.pass.cpp SKIPPED

# "The behavior demonstrated in this test is not meant to be standard"
std/utilities/smartptr/unique.ptr/unique.ptr.class/unique.ptr.ctor/null.pass.cpp FAIL

# allocator<const T>
std/iterators/iterator.requirements/iterator.cust/iterator.cust.move/iter_rvalue_reference_t.pass.cpp FAIL
std/utilities/memory/default.allocator/allocator.ctor.pass.cpp FAIL

# This test is passing non-BidirectionalIterators to std::prev.
# LWG-3197 "std::prev should not require BidirectionalIterator" (New)
std/iterators/iterator.primitives/iterator.operations/prev.pass.cpp FAIL

# Itanium ABI assumptions that current_exception and rethrow_exception don't copy the exception object
std/language.support/support.exception/except.nested/rethrow_if_nested.pass.cpp SKIPPED
std/language.support/support.exception/propagation/current_exception.pass.cpp SKIPPED
std/language.support/support.exception/propagation/make_exception_ptr.pass.cpp FAIL
std/language.support/support.exception/propagation/rethrow_exception.pass.cpp FAIL

# Testing nonstandard behavior
std/utilities/template.bitset/bitset.cons/string_ctor.pass.cpp FAIL

# Tests with undefined behavior under N4842 [basic.start.term]/6 (detached threads)
std/thread/futures/futures.task/futures.task.members/dtor.pass.cpp SKIPPED
std/thread/futures/futures.unique_future/wait_until.pass.cpp SKIPPED

# libcxx is incorrect on what the type passed to allocator::construct should be (https://reviews.llvm.org/D61364)
std/containers/associative/map/map.modifiers/insert_and_emplace_allocator_requirements.pass.cpp FAIL
std/containers/associative/set/insert_and_emplace_allocator_requirements.pass.cpp FAIL
std/containers/unord/unord.map/unord.map.modifiers/insert_and_emplace_allocator_requirements.pass.cpp FAIL
std/containers/unord/unord.set/insert_and_emplace_allocator_requirements.pass.cpp FAIL

# libc++ doesn't yet implement P1423R3, so it expects an old value for `__cpp_lib_char8_t`
std/language.support/support.limits/support.limits.general/atomic.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/filesystem.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/istream.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/limits.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/locale.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/ostream.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/string_view.version.pass.cpp FAIL

# libc++ doesn't yet implement P2231R1, so it expects an old value for `__cpp_lib_optional`
std/language.support/support.limits/support.limits.general/optional.version.pass.cpp FAIL

# Bogus test believes that copyability of array<T, 0> must be the same as array<T, 1>
std/containers/sequences/array/array.cons/implicit_copy.pass.cpp FAIL

# string_view and array iterators are not portably pointers (https://reviews.llvm.org/D117368)
std/iterators/iterator.primitives/iterator.traits/cxx20_iterator_traits.compile.pass.cpp FAIL
std/iterators/iterator.requirements/iterator.cust/iterator.cust.move/iter_move.pass.cpp FAIL
std/strings/string.view/string.view.cons/from_iterator_sentinel.pass.cpp FAIL
std/strings/string.view/string.view.deduct/iterator_sentinel.pass.cpp FAIL
std/utilities/format/format.formatter/format.parse.ctx/advance_to.pass.cpp FAIL
std/utilities/format/format.formatter/format.parse.ctx/begin.pass.cpp FAIL
std/utilities/format/format.formatter/format.parse.ctx/ctor.pass.cpp FAIL
std/utilities/format/format.formatter/format.parse.ctx/end.pass.cpp FAIL

# libc++ doesn't correctly constrain the iterator_traits specialization for common_iterator (https://reviews.llvm.org/D117449)
std/iterators/predef.iterators/iterators.common/iterator_traits.compile.pass.cpp FAIL

# libc++ hasn't updated {move,reverse}_iterator for P0896R4
std/iterators/predef.iterators/move.iterators/move.iter.ops/move.iter.op=/move_iterator.pass.cpp FAIL
std/iterators/predef.iterators/move.iterators/move.iterator/iterator_concept_conformance.compile.pass.cpp FAIL
std/iterators/predef.iterators/reverse.iterators/iterator_concept_conformance.compile.pass.cpp FAIL
std/iterators/predef.iterators/reverse.iterators/reverse.iter.cmp/three-way.pass.cpp FAIL
std/iterators/predef.iterators/reverse.iterators/reverse.iter.cons/assign.pass.cpp FAIL

# optional's comparisons aren't portably constrained (https://reviews.llvm.org/D116884)
std/concepts/concepts.compare/concepts.totallyordered/totally_ordered.pass.cpp FAIL
std/concepts/concepts.compare/concept.equalitycomparable/equality_comparable.compile.pass.cpp FAIL

# libc++ doesn't implement LWG-3648: "format should not print bool with 'c'"
std/utilities/format/format.functions/vformat_to.locale.pass.cpp FAIL
std/utilities/format/format.functions/vformat_to.pass.cpp FAIL
std/utilities/format/format.functions/vformat.locale.pass.cpp FAIL
std/utilities/format/format.functions/vformat.pass.cpp FAIL

# libc++ doesn't implement P2321R2's changes to vector<bool>::reference
std/containers/sequences/vector.bool/iterator_concept_conformance.compile.pass.cpp FAIL


# *** INTERACTIONS WITH CONTEST / C1XX THAT UPSTREAM LIKELY WON'T FIX ***
# Tracked by VSO-593630 "<filesystem> Enable libcxx filesystem tests"
# rapid-cxx-test.hpp uses pragma system_header
# test header filesystem_test_helper.hpp emits "error: "STATIC TESTS DISABLED""
# const_cast from const std::wstring& to std::string& is not allowed
std/input.output/filesystems/class.directory_entry/directory_entry.cons/copy.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.cons/copy_assign.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.cons/move.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.cons/move_assign.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.cons/path.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.mods/assign.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.mods/refresh.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.mods/replace_filename.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.obs/file_size.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.obs/file_type_obs.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.obs/hard_link_count.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.obs/last_write_time.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.obs/status.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_entry/directory_entry.obs/symlink_status.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.members/copy.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.members/copy_assign.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.members/ctor.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.members/increment.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.members/move.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.members/move_assign.pass.cpp SKIPPED
std/input.output/filesystems/class.directory_iterator/directory_iterator.nonmembers/begin_end.pass.cpp SKIPPED
std/input.output/filesystems/class.path/synop.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.itr/iterator.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.append.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.compare.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.concat.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.assign/copy.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.assign/move.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.assign/source.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.construct/copy.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.construct/move.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.construct/source.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.decompose/path.decompose.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.gen/lexically_normal.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.gen/lexically_relative_and_proximate.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.generic.obs/generic_string_alloc.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.generic.obs/named_overloads.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.modifiers/clear.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.modifiers/make_preferred.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.modifiers/remove_filename.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.modifiers/replace_extension.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.modifiers/replace_filename.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.modifiers/swap.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.native.obs/c_str.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.native.obs/named_overloads.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.native.obs/native.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.member/path.native.obs/operator_string.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.nonmember/append_op.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.nonmember/path.factory.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.nonmember/path.io.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.nonmember/path.io.unicode_bug.pass.cpp SKIPPED
std/input.output/filesystems/class.path/path.nonmember/swap.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/copy.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/copy_assign.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/ctor.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/depth.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/disable_recursion_pending.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/increment.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/move.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/move_assign.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/pop.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.members/recursion_pending.pass.cpp SKIPPED
std/input.output/filesystems/class.rec.dir.itr/rec.dir.itr.nonmembers/begin_end.pass.cpp SKIPPED
std/input.output/filesystems/fs.enum/enum.copy_options.pass.cpp SKIPPED
std/input.output/filesystems/fs.enum/enum.directory_options.pass.cpp SKIPPED
std/input.output/filesystems/fs.enum/enum.file_type.pass.cpp SKIPPED
std/input.output/filesystems/fs.enum/enum.path.format.pass.cpp SKIPPED
std/input.output/filesystems/fs.enum/enum.perms.pass.cpp SKIPPED
std/input.output/filesystems/fs.enum/enum.perm_options.pass.cpp SKIPPED
std/input.output/filesystems/fs.filesystem.synopsis/file_time_type.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.absolute/absolute.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.canonical/canonical.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.copy/copy.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.copy_file/copy_file.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.copy_file/copy_file_large.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.copy_symlink/copy_symlink.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.create_directories/create_directories.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.create_directory/create_directory.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.create_directory/create_directory_with_attributes.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.create_directory_symlink/create_directory_symlink.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.create_hard_link/create_hard_link.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.create_symlink/create_symlink.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.current_path/current_path.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.equivalent/equivalent.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.exists/exists.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.file_size/file_size.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.hard_lk_ct/hard_link_count.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_block_file/is_block_file.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_char_file/is_character_file.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_directory/is_directory.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_empty/is_empty.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_fifo/is_fifo.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_other/is_other.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_regular_file/is_regular_file.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_socket/is_socket.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.is_symlink/is_symlink.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.last_write_time/last_write_time.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.permissions/permissions.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.proximate/proximate.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.read_symlink/read_symlink.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.relative/relative.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.remove/remove.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.remove_all/remove_all.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.rename/rename.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.resize_file/resize_file.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.space/space.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.status/status.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.status_known/status_known.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.symlink_status/symlink_status.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.temp_dir_path/temp_directory_path.pass.cpp SKIPPED
std/input.output/filesystems/fs.op.funcs/fs.op.weakly_canonical/weakly_canonical.pass.cpp SKIPPED

# generate_feature_test_macro_components.py needs to learn about C1XX
std/language.support/support.limits/support.limits.general/version.version.pass.cpp FAIL

# These tests set an allocator with a max_size() too small to default construct an unordered container
# (due to our minimum bucket size).
std/containers/unord/unord.map/max_size.pass.cpp FAIL
std/containers/unord/unord.multimap/max_size.pass.cpp FAIL
std/containers/unord/unord.multiset/max_size.pass.cpp FAIL
std/containers/unord/unord.set/max_size.pass.cpp FAIL

# Extreme compiler memory consumption.
std/utilities/tuple/tuple.tuple/tuple.apply/apply_large_arity.pass.cpp SKIPPED
std/utilities/tuple/tuple.tuple/tuple.cnstr/recursion_depth.pass.cpp SKIPPED

# Deprecation is a mess. We disable all deprecations in llvm-project/libcxx/test/support/msvc_stdlib_force_include.h
# (external to this repo) to allow libc++ tests for deprecated features to pass, which breaks when libc++ deprecates
# the feature and adds two tests that (1) pass with deprecation suppressed, and (2) fail without deprecation suppression.
# We should instead translate libc++ un-deprecation macros to STL un-deprecation macros in the force-include header,
# and just skip tests when we deprecate before they do.
std/utilities/meta/meta.unary/meta.unary.prop/is_literal_type.deprecated.fail.cpp FAIL


# *** MISSING STL FEATURES ***
# P2321R2 zip
std/language.support/support.limits/support.limits.general/tuple.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/utility.version.pass.cpp FAIL


# *** MISSING COMPILER FEATURES ***
# Nothing here! :-)


# *** MISSING LWG ISSUE RESOLUTIONS ***
# LWG-2503 "multiline option should be added to syntax_option_type"
std/re/re.const/re.matchflag/match_multiline.pass.cpp FAIL

# LWG-2532 "Satisfying a promise at thread exit" (Open)
# WCFB02 implements the proposed resolution for this issue
std/thread/futures/futures.promise/set_exception_at_thread_exit.pass.cpp FAIL
std/thread/futures/futures.promise/set_lvalue_at_thread_exit.pass.cpp FAIL
std/thread/futures/futures.promise/set_rvalue_at_thread_exit.pass.cpp FAIL
std/thread/futures/futures.promise/set_value_at_thread_exit_const.pass.cpp FAIL
std/thread/futures/futures.promise/set_value_at_thread_exit_void.pass.cpp FAIL
std/thread/futures/futures.task/futures.task.members/make_ready_at_thread_exit.pass.cpp FAIL

# LWG-3633 "Atomics are copy constructible and copy assignable from volatile atomics" (Open)
std/atomics/atomics.types.generic/copy_semantics_traits.pass.cpp FAIL


# *** C1XX COMPILER BUGS ***
# DevCom-409222 "Constructing rvalue reference from non-reference-related lvalue reference"
std/utilities/meta/meta.unary/meta.unary.prop/is_constructible.pass.cpp:0 FAIL

# VSO-1271673 "static analyzer doesn't know about short-circuiting"
std/algorithms/alg.sorting/alg.sort/partial.sort/partial_sort.pass.cpp:0 FAIL
std/algorithms/alg.sorting/alg.sort/partial.sort/partial_sort_comp.pass.cpp:0 FAIL

# DevCom-1559808: (structured bindings for `subrange` in a constant expression)
# Skipped as this sometimes emits "fatal error C1001: Internal compiler error." with a crash dialog.
std/ranges/range.utility/range.subrange/structured_bindings.pass.cpp:0 SKIPPED

# DevCom-1626139 "compile-time NaN comparison"
std/iterators/predef.iterators/reverse.iterators/reverse.iter.cmp/three-way.pass.cpp:0 FAIL
std/library/description/conventions/expos.only.func/synth_three_way.pass.cpp:0 FAIL
std/utilities/function.objects/comparisons/compare_three_way.pass.cpp:0 FAIL
std/utilities/tuple/tuple.tuple/tuple.rel/three_way.pass.cpp:0 FAIL
std/utilities/utility/pairs/pairs.spec/three_way_comparison.pass.cpp:0 FAIL

# DevCom-1626727: bogus "failure was caused by a conversion from void* to a pointer-to-object type" for conversion to void
std/algorithms/robust_re_difference_type.compile.pass.cpp:0 FAIL

# DevCom-1638496: C1XX doesn't properly reject int <=> unsigned
std/language.support/cmp/cmp.concept/three_way_comparable_with.compile.pass.cpp:0 FAIL
std/language.support/cmp/cmp.result/compare_three_way_result.compile.pass.cpp:0 FAIL
std/utilities/tuple/tuple.tuple/tuple.rel/three_way.pass.cpp:0 FAIL

# DevCom-1638563: icky static analysis false positive
std/language.support/support.coroutines/end.to.end/go.pass.cpp:0 FAIL

# DevCom-10026599: conditional expression has two different types
std/concepts/concepts.compare/concept.equalitycomparable/equality_comparable_with.compile.pass.cpp:0 FAIL


# *** CLANG COMPILER BUGS ***
# LLVM-46207 Clang's tgmath.h interferes with the UCRT's tgmath.h
std/depr/depr.c.headers/tgmath_h.pass.cpp:1 FAIL

# Clang doesn't yet implement P0960 "Initializing Aggregates With Parentheses"
std/ranges/range.factories/range.iota.view/sentinel/ctor.value.pass.cpp:1 FAIL


# *** CLANG ISSUES, NOT YET ANALYZED ***
# Clang doesn't enable sized deallocation by default. Should we add -fsized-deallocation or do something else?
std/language.support/support.dynamic/new.delete/new.delete.array/sized_delete_array_fsizeddeallocation.pass.cpp:1 SKIPPED
std/language.support/support.dynamic/new.delete/new.delete.array/sized_delete_array14.pass.cpp:1 SKIPPED
std/language.support/support.dynamic/new.delete/new.delete.single/sized_delete_fsizeddeallocation.pass.cpp:1 SKIPPED
std/language.support/support.dynamic/new.delete/new.delete.single/sized_delete14.pass.cpp:1 SKIPPED

# Not yet analyzed. Clang apparently defines platform macros differently from C1XX.
std/language.support/support.limits/limits/numeric.limits.members/traps.pass.cpp:1 FAIL


# *** STL BUGS ***
# GH-1112 <locale>: the enum value of std::money_base is not correct
std/localization/locale.categories/category.monetary/locale.moneypunct/money_base.pass.cpp FAIL

# GH-1113 <fstream>: basic_filebuf doesn't comply with setbuf(0,0) requirement in the standard
std/input.output/file.streams/fstreams/filebuf.virtuals/overflow.pass.cpp FAIL
std/input.output/file.streams/fstreams/filebuf.virtuals/underflow.pass.cpp FAIL

# GH-1295 <array>: array<const T, 0> allows fill() and swap()
std/containers/sequences/array/array.fill/fill.fail.cpp FAIL
std/containers/sequences/array/array.swap/swap.fail.cpp FAIL

# GH-1006 <algorithm>: debug checks for predicates are observable
std/algorithms/alg.sorting/alg.merge/inplace_merge_comp.pass.cpp FAIL
std/algorithms/alg.sorting/alg.min.max/minmax_init_list_comp.pass.cpp FAIL

# GH-1259 <locale>: wrong field extraction for hexfloats, or special cases like inf
std/localization/locale.categories/category.numeric/locale.num.get/facet.num.get.members/get_double.pass.cpp FAIL
std/localization/locale.categories/category.numeric/locale.num.get/facet.num.get.members/get_float.pass.cpp FAIL
std/localization/locale.categories/category.numeric/locale.num.get/facet.num.get.members/get_long_double.pass.cpp FAIL

# GH-1277 <xlocnum>: We don't match numpunct groups correctly in do_get
std/localization/locale.categories/category.numeric/locale.num.get/facet.num.get.members/get_long.pass.cpp FAIL

# GH-1275 <locale>: missing some locale names
# We don't have the locale names libcxx wants specialized in platform_support.hpp
# More bugs may be uncovered when the locale names are present.
# move.pass.cpp can crash.
std/input.output/iostreams.base/ios/basic.ios.members/move.pass.cpp SKIPPED
std/localization/locale.categories/category.collate/locale.collate.byname/compare.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/is_1.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/is_many.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/narrow_1.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/narrow_many.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/scan_is.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/scan_not.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/widen_1.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.ctype.byname/widen_many.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/curr_symbol.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/decimal_point.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/grouping.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/neg_format.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/negative_sign.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/pos_format.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct.byname/thousands_sep.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_date.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_date_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_monthname.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_monthname_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_one.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_one_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_weekday.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get.byname/get_weekday_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.put.byname/put1.pass.cpp FAIL
std/localization/locale.categories/facet.numpunct/locale.numpunct.byname/grouping.pass.cpp FAIL
std/localization/locale.categories/facet.numpunct/locale.numpunct.byname/thousands_sep.pass.cpp FAIL

# GH-1264 <locale>: wbuffer_convert does not implement seek
std/localization/locales/locale.convenience/conversions/conversions.buffer/seekoff.pass.cpp FAIL

# GH-1116 <system_error>: error_category's default ctor isn't constexpr.
std/diagnostics/syserr/syserr.errcat/syserr.errcat.nonvirtuals/default_ctor.pass.cpp:1 FAIL

# GH-1190 <future>: incorrectly used copy assignment instead of copy construction in set_value
std/thread/futures/futures.promise/set_value_const.pass.cpp FAIL

# GH-784 <type_traits>: aligned_storage has incorrect alignment defaults
std/utilities/meta/meta.trans/meta.trans.other/aligned_storage.pass.cpp FAIL

# GH-519 <cmath>: signbit() misses overloads for integer types
std/depr/depr.c.headers/math_h.pass.cpp FAIL
std/numerics/c.math/cmath.pass.cpp FAIL

# GH-2358: <filesystem>: path's comparison operators are IF-NDR
std/input.output/filesystems/class.path/range_concept_conformance.compile.pass.cpp FAIL

# GH-1374: Spaceship CPO wording in [cmp.alg] needs an overhaul
# (Technically an STL bug until the wording in the working draft is fixed to agree.)
std/language.support/cmp/cmp.alg/partial_order.pass.cpp FAIL
std/language.support/cmp/cmp.alg/strong_order.pass.cpp FAIL
std/language.support/cmp/cmp.alg/weak_order.pass.cpp FAIL


# *** CRT BUGS ***
# We're permanently missing aligned_alloc().
std/depr/depr.c.headers/stdlib_h.aligned_alloc.compile.pass.cpp FAIL
std/language.support/support.runtime/cstdlib.aligned_alloc.compile.pass.cpp FAIL

# OS-11107628 "_Exit allows cleanup in other DLLs"
std/thread/thread.threads/thread.thread.class/thread.thread.assign/move2.pass.cpp SKIPPED
std/thread/thread.threads/thread.thread.class/thread.thread.member/join.pass.cpp SKIPPED

# OS-29877133 "LDBL_DECIMAL_DIG missing from <float.h>"
std/depr/depr.c.headers/float_h.pass.cpp:0 FAIL
std/language.support/support.limits/c.limits/cfloat.pass.cpp:0 FAIL


# *** LIKELY BOGUS TESTS ***
# pass lambda without noexcept to barrier
std/thread/thread.barrier/completion.pass.cpp FAIL
std/thread/thread.barrier/max.pass.cpp FAIL

# Test bug after LWG-2899 "is_(nothrow_)move_constructible and tuple, optional and unique_ptr" was accepted.
std/utilities/smartptr/unique.ptr/unique.ptr.class/unique.ptr.asgn/move_convert.pass.cpp FAIL
std/utilities/smartptr/unique.ptr/unique.ptr.class/unique.ptr.asgn/move_convert.runtime.pass.cpp FAIL
std/utilities/smartptr/unique.ptr/unique.ptr.class/unique.ptr.asgn/move_convert.single.pass.cpp FAIL
std/utilities/smartptr/unique.ptr/unique.ptr.class/unique.ptr.asgn/move.pass.cpp FAIL

# Test bug after LWG-3257 "Missing feature testing macro update from P0858" was accepted.
std/language.support/support.limits/support.limits.general/string.version.pass.cpp FAIL

# Not yet analyzed, likely bogus tests. Appears to be timing assumptions.
std/atomics/atomics.types.operations/atomics.types.operations.wait/atomic_notify_all.pass.cpp SKIPPED
std/thread/futures/futures.async/async.pass.cpp SKIPPED
std/thread/futures/futures.shared_future/get.pass.cpp SKIPPED
std/thread/futures/futures.shared_future/wait.pass.cpp SKIPPED
std/thread/futures/futures.shared_future/wait_for.pass.cpp SKIPPED
std/thread/futures/futures.shared_future/wait_until.pass.cpp SKIPPED
std/thread/futures/futures.unique_future/get.pass.cpp SKIPPED
std/thread/futures/futures.unique_future/wait.pass.cpp SKIPPED
std/thread/futures/futures.unique_future/wait_for.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvar/notify_all.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvar/notify_one.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvar/wait_for_pred.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvar/wait_for.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvar/wait_until_pred.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvar/wait_until.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvarany/notify_all.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvarany/notify_one.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvarany/wait_for_pred.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvarany/wait_for.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvarany/wait_until_pred.pass.cpp SKIPPED
std/thread/thread.condition/thread.condition.condvarany/wait_until.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.guard/adopt_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.guard/mutex.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.shared/thread.lock.shared.cons/mutex_duration.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.shared/thread.lock.shared.cons/mutex_time_point.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.shared/thread.lock.shared.cons/mutex_try_to_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.shared/thread.lock.shared.cons/mutex.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.shared/thread.lock.shared.locking/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.unique/thread.lock.unique.cons/mutex_duration.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.unique/thread.lock.unique.cons/mutex_time_point.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.unique/thread.lock.unique.cons/mutex_try_to_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.unique/thread.lock.unique.cons/mutex.pass.cpp SKIPPED
std/thread/thread.mutex/thread.lock/thread.lock.unique/thread.lock.unique.locking/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.mutex.requirements.mutex/thread.mutex.class/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.mutex.requirements.mutex/thread.mutex.class/try_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.mutex.requirements.mutex/thread.mutex.recursive/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.mutex.requirements.mutex/thread.mutex.recursive/try_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.shared_mutex.requirements/thread.shared_mutex.class/lock_shared.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.shared_mutex.requirements/thread.shared_mutex.class/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.shared_mutex.requirements/thread.shared_mutex.class/try_lock_shared.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.shared_mutex.requirements/thread.shared_mutex.class/try_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/lock_shared.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/try_lock_for.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/try_lock_shared_for.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/try_lock_shared_until.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/try_lock_shared.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/try_lock_until.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.sharedtimedmutex.requirements/thread.sharedtimedmutex.class/try_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.class/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.class/try_lock_for.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.class/try_lock_until.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.class/try_lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.recursive/lock.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.recursive/try_lock_for.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.recursive/try_lock_until.pass.cpp SKIPPED
std/thread/thread.mutex/thread.mutex.requirements/thread.timedmutex.requirements/thread.timedmutex.recursive/try_lock.pass.cpp SKIPPED
std/thread/thread.threads/thread.thread.class/thread.thread.destr/dtor.pass.cpp SKIPPED
std/thread/thread.threads/thread.thread.class/thread.thread.member/detach.pass.cpp SKIPPED
std/thread/thread.threads/thread.thread.this/sleep_until.pass.cpp SKIPPED

# Not yet analyzed, likely bogus tests. Various assertions, probably POSIX assumptions.
std/diagnostics/syserr/syserr.compare/eq_error_code_error_code.pass.cpp FAIL
std/diagnostics/syserr/syserr.errcat/syserr.errcat.derived/message.pass.cpp FAIL
std/diagnostics/syserr/syserr.errcat/syserr.errcat.objects/system_category.pass.cpp FAIL
std/diagnostics/syserr/syserr.syserr/syserr.syserr.members/ctor_error_code_const_char_pointer.pass.cpp FAIL
std/diagnostics/syserr/syserr.syserr/syserr.syserr.members/ctor_error_code_string.pass.cpp FAIL
std/diagnostics/syserr/syserr.syserr/syserr.syserr.members/ctor_error_code.pass.cpp FAIL
std/diagnostics/syserr/syserr.syserr/syserr.syserr.members/ctor_int_error_category_const_char_pointer.pass.cpp FAIL
std/diagnostics/syserr/syserr.syserr/syserr.syserr.members/ctor_int_error_category_string.pass.cpp FAIL
std/diagnostics/syserr/syserr.syserr/syserr.syserr.members/ctor_int_error_category.pass.cpp FAIL

# libc++ disagrees with libstdc++ and MSVC on whether setstate calls during I/O that throw set failbit; see open issue LWG-2349
std/input.output/iostream.format/input.streams/istream.unformatted/get_pointer_size_chart.pass.cpp FAIL
std/input.output/iostream.format/input.streams/istream.unformatted/get_pointer_size.pass.cpp FAIL

# Sensitive to implementation details. Assertion failed: test_alloc_base::count == expected_num_allocs
std/containers/container.requirements/container.requirements.general/allocator_move.pass.cpp FAIL

# Comment: "Test C99 compound literal."
# Code: `(int[]){3, 4}`
# error C4576: a parenthesized type followed by an initializer list is a non-standard explicit type conversion syntax
std/containers/sequences/array/array.creation/to_array.pass.cpp:0 FAIL

# Tests emit warning C4244: 'argument': conversion from 'T' to 'const std::complex<double>::_Ty', possible loss of data
std/numerics/complex.number/cmplx.over/conj.pass.cpp:0 FAIL
std/numerics/complex.number/cmplx.over/pow.pass.cpp:0 FAIL
std/numerics/complex.number/cmplx.over/proj.pass.cpp:0 FAIL

# Assertion failed: c == NaN || c == non_zero_nan
# Testing input values outside the range of [complex.value.ops]/9
# libc++ handles those input values differently
std/numerics/complex.number/complex.value.ops/polar.pass.cpp FAIL

# Assertion failed: std::abs(skew - x_skew) < 0.01
# Random number generation test with too strict pass criteria (test8 failure probability ~= 0.04)
std/numerics/rand/rand.dis/rand.dist.samp/rand.dist.samp.pconst/eval.pass.cpp FAIL

# Assertion failed: std::abs(f(u[i], a, m, bk, c) - double(i)/N) < .001
# Random number generation test with too strict pass criteria (test6 failure probability > 0.2)
std/numerics/rand/rand.dis/rand.dist.samp/rand.dist.samp.plinear/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.samp/rand.dist.samp.plinear/eval.pass.cpp FAIL

# Assertion failed: invalid min and max arguments for uniform_real
# `param_type p(5);` is a precondition violation.
std/numerics/rand/rand.dis/rand.dist.uni/rand.dist.uni.real/param_ctor.pass.cpp FAIL

# Assertion failed: invalid beta argument for gamma_distribution
# test4() constructs a negative_binomial_distribution from (40, 1); [rand.dist.bern.negbin] says p == 1 generates undefined probabilities.
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.negbin/eval.pass.cpp FAIL

# Assertion failed: (std::lerp(T(2.3), T(2.3), inf) == T(2.3))
# Asserts `(std::lerp(T(2.3), T(2.3), inf) == T(2.3))` and `std::isnan(std::lerp(T( 0), T( 0), inf))`
# They shouldn't behave differently. Both of them should probably return NaN.
std/numerics/c.math/lerp.pass.cpp FAIL

# --month{14} should be 1, not 13 as the test expects
std/utilities/time/time.cal/time.cal.month/time.cal.month.members/decrement.pass.cpp FAIL

# conversion from '__int64' to 'long', possible loss of data
std/utilities/time/time.hms/time.hms.members/seconds.pass.cpp:0 FAIL
std/utilities/time/time.hms/time.hms.members/subseconds.pass.cpp:0 FAIL

# Bogus test passes a class type as the second argument to std::advance
std/iterators/iterator.primitives/iterator.operations/robust_against_adl.pass.cpp FAIL

# Non-Standard assumption that std::filesystem::file_time_type::duration::period is std::nano
std/input.output/filesystems/fs.filesystem.synopsis/file_time_type_resolution.compile.pass.cpp FAIL

# P1614R2 "Adding Spaceship <=> To The Library" makes `std::operator!=(i1, i3)` an error
std/iterators/stream.iterators/istream.iterator/istream.iterator.ops/equal.pass.cpp FAIL

# Uses-allocator class constructor wants non-const allocator ref and mismatched piecewise_construct's value category
std/utilities/allocator.adaptor/allocator.adaptor.members/construct.pass.cpp FAIL
std/utilities/allocator.adaptor/allocator.adaptor.members/construct_pair.pass.cpp FAIL
std/utilities/allocator.adaptor/allocator.adaptor.members/construct_pair_const_lvalue_pair.pass.cpp FAIL
std/utilities/allocator.adaptor/allocator.adaptor.members/construct_pair_piecewise.pass.cpp FAIL
std/utilities/allocator.adaptor/allocator.adaptor.members/construct_pair_rvalue.pass.cpp FAIL
std/utilities/allocator.adaptor/allocator.adaptor.members/construct_pair_values.pass.cpp FAIL
std/utilities/allocator.adaptor/allocator.adaptor.members/construct_type.pass.cpp FAIL

# Tests ignore the return value of sto{meow}, triggering nodiscard warnings
std/strings/string.conversions/stod.pass.cpp FAIL
std/strings/string.conversions/stof.pass.cpp FAIL
std/strings/string.conversions/stoi.pass.cpp FAIL
std/strings/string.conversions/stol.pass.cpp FAIL
std/strings/string.conversions/stold.pass.cpp FAIL
std/strings/string.conversions/stoll.pass.cpp FAIL
std/strings/string.conversions/stoul.pass.cpp FAIL
std/strings/string.conversions/stoull.pass.cpp FAIL

# We define __cpp_lib_has_unique_object_representations in C++17 mode; test error says it
# "should not be defined when TEST_HAS_BUILTIN_IDENTIFIER(__has_unique_object_representations) || TEST_GCC_VER >= 700 is not defined!"
std/language.support/support.limits/support.limits.general/type_traits.version.pass.cpp:1 FAIL

# Tests expect __cpp_lib_ranges to have the old value 201811L for P0896R4; we define the C++20 value 201911L for P1716R3.
std/language.support/support.limits/support.limits.general/algorithm.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/functional.version.pass.cpp FAIL
std/language.support/support.limits/support.limits.general/iterator.version.pass.cpp FAIL

# Test expects __cpp_lib_chrono to have the old value 201611L for P0505R0; we define the C++20 value 201907L for P1466R3.
std/language.support/support.limits/support.limits.general/chrono.version.pass.cpp FAIL

# We unconditionally define __cpp_lib_addressof_constexpr; test error says it
# "should not be defined when TEST_HAS_BUILTIN(__builtin_addressof) || TEST_GCC_VER >= 700 is not defined!"
std/language.support/support.limits/support.limits.general/memory.version.pass.cpp FAIL

# libc++ doesn't implement P2231R1 Add further constexpr support for optional/variant
std/language.support/support.limits/support.limits.general/variant.version.pass.cpp FAIL

# Tests non-portable behavior
std/utilities/format/format.formatter/format.context/format.context/advance_to.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.context/arg.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.context/ctor.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.context/locale.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.context/out.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.bool.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.c_string.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.char.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.const_char_array.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.signed_integral.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.string.pass.cpp FAIL
std/utilities/format/format.formatter/format.context/format.formatter.spec/formatter.unsigned_integral.pass.cpp FAIL

# libc++ doesn't yet implement P2216R3 (test uses non-constant-expression format strings)
std/utilities/format/format.functions/format.pass.cpp FAIL
std/utilities/format/format.functions/format.locale.pass.cpp FAIL
std/utilities/format/format.functions/format_to.locale.pass.cpp FAIL
std/utilities/format/format.functions/format_to.pass.cpp FAIL
std/utilities/format/format.functions/format_to_n.pass.cpp FAIL
std/utilities/format/format.functions/format_to_n.locale.pass.cpp FAIL
std/utilities/format/format.functions/formatted_size.pass.cpp FAIL
std/utilities/format/format.functions/formatted_size.locale.pass.cpp FAIL
std/utilities/format/format.functions/locale-specific_form.pass.cpp FAIL

# libc++ chose option A for [time.clock.file.members], and we chose option B.
std/utilities/time/time.clock/time.clock.file/to_from_sys.pass.cpp FAIL

# libc++ is missing various Ranges DRs
std/language.support/support.limits/support.limits.general/ranges.version.pass.cpp FAIL

# test compares singular and non-singular string iterators
std/strings/basic.string/string.iterators/iterators.pass.cpp FAIL

# test compares iterators into distinct `array`s
std/ranges/range.adaptors/range.all/range.owning.view/begin_end.pass.cpp FAIL

# libc++ allows some forbidden unique_ptr conversions
std/utilities/memory/util.smartptr/util.smartptr.shared/util.smartptr.shared.assign/unique_ptr_Y.pass.cpp FAIL
std/utilities/memory/util.smartptr/util.smartptr.shared/util.smartptr.shared.const/unique_ptr.pass.cpp FAIL

# non-portable test of strengthened noexcept
std/ranges/range.adaptors/range.drop/ctor.default.pass.cpp FAIL
std/ranges/range.adaptors/range.transform/iterator/subscript.pass.cpp FAIL
std/ranges/range.utility/view.interface/view.interface.pass.cpp FAIL

# tests invalid range
std/utilities/memory/specialized.algorithms/uninitialized.copy/ranges_uninitialized_copy.pass.cpp SKIPPED
std/utilities/memory/specialized.algorithms/uninitialized.move/ranges_uninitialized_move.pass.cpp SKIPPED

# Narrowing conversion
std/utilities/memory/specialized.algorithms/uninitialized.copy/ranges_uninitialized_copy_n.pass.cpp:0 FAIL
std/utilities/memory/specialized.algorithms/uninitialized.move/ranges_uninitialized_move_n.pass.cpp:0 FAIL

# <charconv> test defines std::_Bit_cast, which we already have
std/utilities/charconv/charconv.msvc/test.pass.cpp FAIL

# libc++ doesn't yet implement LWG-3533
std/ranges/range.adaptors/range.transform/end.pass.cpp FAIL
std/ranges/range.adaptors/range.transform/iterator/base.pass.cpp FAIL

# MaybePOCCAAllocator doesn't meet the allocator requirements
std/containers/sequences/vector/vector.cons/assign_copy.pass.cpp FAIL

# Mismatching allocator value_type
std/containers/sequences/vector.bool/get_allocator.pass.cpp FAIL

# Test annotated "XFAIL: msvc" should be "XFAIL: msvc && stdlib=libc++"
std/language.support/support.dynamic/alloc.errors/set.new.handler/get_new_handler.pass.cpp SKIPPED
std/utilities/function.objects/func.wrap/func.wrap.func/func.wrap.func.con/copy_move.pass.cpp SKIPPED

# compares iterators from distinct transform_views
std/ranges/range.adaptors/range.transform/iterator/plus_minus.pass.cpp FAIL

# MoveOnlyForwardIterator (a misnomer) has mixed-type comparisons and conversions
std/ranges/range.utility/range.subrange/primitives.pass.cpp:0 FAIL

# libc++ speculatively implements LWG-3645
std/strings/basic.string/string.capacity/resize_and_overwrite.pass.cpp FAIL

# libc++ is missing various <format> DRs
std/language.support/support.limits/support.limits.general/format.version.pass.cpp FAIL

# We speculatively implement LWG-3670
std/ranges/range.factories/range.iota.view/iterator/member_typedefs.compile.pass.cpp FAIL


# *** LIKELY STL BUGS ***
# Not yet analyzed, likely STL bugs. Various assertions.
std/re/re.alg/re.alg.match/awk.pass.cpp FAIL
std/re/re.alg/re.alg.match/basic.pass.cpp FAIL
std/re/re.alg/re.alg.match/ecma.pass.cpp FAIL
std/re/re.alg/re.alg.match/extended.pass.cpp FAIL
std/re/re.alg/re.alg.search/awk.pass.cpp FAIL
std/re/re.alg/re.alg.search/basic.pass.cpp FAIL
std/re/re.alg/re.alg.search/ecma.pass.cpp FAIL
std/re/re.alg/re.alg.search/extended.pass.cpp FAIL
std/re/re.alg/re.alg.search/no_update_pos.pass.cpp FAIL
std/re/re.badexp/regex_error.pass.cpp FAIL
std/re/re.const/re.synopt/syntax_option_type.pass.cpp FAIL
std/re/re.grammar/excessive_brace_count.pass.cpp FAIL
std/re/re.regex/re.regex.construct/bad_backref.pass.cpp FAIL
std/re/re.regex/re.regex.construct/bad_escape.pass.cpp FAIL
std/re/re.regex/re.regex.construct/bad_range.pass.cpp FAIL
std/re/re.regex/re.regex.construct/default.pass.cpp FAIL
std/re/re.regex/re.regex.nonmemb/re.regex.nmswap/swap.pass.cpp FAIL
std/re/re.regex/re.regex.swap/swap.pass.cpp FAIL
std/re/re.traits/lookup_collatename.pass.cpp FAIL
std/re/re.traits/transform_primary.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Various assertions.
std/numerics/complex.number/complex.member.ops/divide_equal_complex.pass.cpp FAIL
std/numerics/complex.number/complex.ops/complex_divide_complex.pass.cpp FAIL
std/numerics/complex.number/complex.ops/complex_times_complex.pass.cpp FAIL
std/numerics/complex.number/complex.ops/scalar_divide_complex.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/acos.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/acosh.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/asin.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/asinh.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/atanh.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/cos.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/cosh.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/log10.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/pow_complex_complex.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/pow_complex_scalar.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/pow_scalar_complex.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/sin.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/sinh.pass.cpp FAIL
std/numerics/complex.number/complex.transcendentals/tanh.pass.cpp FAIL
std/numerics/complex.number/complex.value.ops/norm.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Many various assertions.
std/localization/locale.categories/category.ctype/facet.ctype.special/facet.ctype.char.statics/classic_table.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.get/locale.money.get.members/get_long_double_en_US.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.get/locale.money.get.members/get_long_double_fr_FR.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.get/locale.money.get.members/get_long_double_ru_RU.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.get/locale.money.get.members/get_long_double_zh_CN.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.get/locale.money.get.members/get_string_en_US.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.put/locale.money.put.members/put_long_double_en_US.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.put/locale.money.put.members/put_long_double_fr_FR.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.put/locale.money.put.members/put_long_double_ru_RU.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.put/locale.money.put.members/put_long_double_zh_CN.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.money.put/locale.money.put.members/put_string_en_US.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct/locale.moneypunct.members/decimal_point.pass.cpp FAIL
std/localization/locale.categories/category.monetary/locale.moneypunct/locale.moneypunct.members/thousands_sep.pass.cpp FAIL
std/localization/locale.categories/category.numeric/locale.nm.put/facet.num.put.members/put_double.pass.cpp FAIL
std/localization/locale.categories/category.numeric/locale.nm.put/facet.num.put.members/put_long_double.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_monthname_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_monthname.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_one.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_time_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_time.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_weekday_wide.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.get/locale.time.get.members/get_weekday.pass.cpp FAIL
std/localization/locale.categories/category.time/locale.time.put/locale.time.put.members/put2.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf16_in.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf16_length.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf16_max_length.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf16_out.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf16.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_in.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_length.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_max_length.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_out.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_utf16_in.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_utf16_length.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_utf16_max_length.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8_utf16_out.pass.cpp FAIL
std/localization/locale.stdcvt/codecvt_utf8.pass.cpp FAIL
std/localization/locales/locale.convenience/conversions/conversions.buffer/overflow.pass.cpp FAIL
std/localization/locales/locale.convenience/conversions/conversions.buffer/pbackfail.pass.cpp FAIL
std/localization/locales/locale.convenience/conversions/conversions.buffer/underflow.pass.cpp FAIL
std/localization/locales/locale.convenience/conversions/conversions.string/ctor_err_string.pass.cpp FAIL

# Not yet analyzed, likely STL bugs. Various assertions.
std/input.output/iostream.format/ext.manip/get_money.pass.cpp FAIL
std/input.output/iostream.format/ext.manip/put_money.pass.cpp FAIL
std/input.output/iostreams.base/ios/basic.ios.members/copyfmt.pass.cpp FAIL

# Likely STL bug: Looks like we shouldn't be using assignment.
std/thread/futures/futures.promise/set_rvalue.pass.cpp FAIL

# Possible STL bugs in pair and tuple.
std/utilities/tuple/tuple.tuple/tuple.cnstr/PR23256_constrain_UTypes_ctor.pass.cpp:0 FAIL
std/utilities/tuple/tuple.tuple/tuple.cnstr/PR31384.pass.cpp:0 FAIL

# Bugs/questionable choices in codecvt<char(16|32)_t, char, mbstate_t>, which we probably will not fix since
# (1) they are deprecated, and (2) we don't want to break existing users.
std/localization/locale.categories/category.ctype/locale.codecvt/locale.codecvt.members/char16_t_max_length.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.codecvt/locale.codecvt.members/char16_t_unshift.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.codecvt/locale.codecvt.members/char32_t_encoding.pass.cpp FAIL
std/localization/locale.categories/category.ctype/locale.codecvt/locale.codecvt.members/char32_t_max_length.pass.cpp FAIL

# Likely STL bug in <chrono>: "result type of conditional expression is ambiguous"
std/utilities/time/time.duration/time.duration.alg/abs.pass.cpp FAIL

# Likely STL bug in <format>: we check argument ids at compiletime in next_arg_id
std/utilities/format/format.formatter/format.parse.ctx/next_arg_id.pass.cpp FAIL

# Likely STL bug in `bind_front`: we don't respect deletion of the target call operator
std/utilities/function.objects/func.bind_front/bind_front.pass.cpp FAIL

# Likely STL bug in `join_view::_Iterator`: constexpr weirdness
std/ranges/range.adaptors/range.join.view/end.pass.cpp:1 FAIL
std/ranges/range.adaptors/range.join.view/iterator/decrement.pass.cpp:0 FAIL
std/ranges/range.adaptors/range.join.view/iterator/increment.pass.cpp:0 FAIL
std/ranges/range.adaptors/range.join.view/iterator/iter.swap.pass.cpp:0 FAIL
std/ranges/range.adaptors/range.join.view/iterator/star.pass.cpp:0 FAIL
std/ranges/range.adaptors/range.join.view/sentinel/ctor.parent.pass.cpp:1 FAIL
std/ranges/range.adaptors/range.join.view/sentinel/eq.pass.cpp:1 FAIL


# *** NOT YET ANALYZED ***
# Not yet analyzed. Asserting about alloc_count.
std/thread/futures/futures.promise/alloc_ctor.pass.cpp FAIL
std/thread/futures/futures.promise/move_assign.pass.cpp FAIL
std/thread/futures/futures.promise/move_ctor.pass.cpp FAIL
std/thread/futures/futures.promise/swap.pass.cpp FAIL
std/thread/futures/futures.shared_future/dtor.pass.cpp FAIL
std/thread/futures/futures.unique_future/dtor.pass.cpp FAIL

# Not yet analyzed. libc++ seems to have a different opinion about what tuple_size<const void> should do.
std/utilities/tuple/tuple.tuple/tuple.helper/tuple_size_incomplete.pass.cpp FAIL
std/utilities/tuple/tuple.tuple/tuple.helper/tuple_size_structured_bindings.pass.cpp FAIL

# Not yet analyzed. Possibly testing nonstandard deduction guides.
std/containers/associative/map/map.cons/deduct.pass.cpp FAIL
std/containers/associative/map/map.cons/deduct_const.pass.cpp FAIL
std/containers/associative/multimap/multimap.cons/deduct.pass.cpp FAIL
std/containers/associative/multimap/multimap.cons/deduct_const.pass.cpp FAIL
std/containers/container.adaptors/priority.queue/priqueue.cons/deduct.pass.cpp FAIL
std/containers/sequences/list/list.cons/deduct.pass.cpp FAIL
std/containers/unord/unord.map/unord.map.cnstr/deduct.pass.cpp FAIL
std/containers/unord/unord.map/unord.map.cnstr/deduct_const.pass.cpp FAIL
std/containers/unord/unord.multimap/unord.multimap.cnstr/deduct.pass.cpp FAIL
std/containers/unord/unord.multimap/unord.multimap.cnstr/deduct_const.pass.cpp FAIL
std/utilities/tuple/tuple.tuple/tuple.cnstr/deduct.pass.cpp:0 FAIL

# Not yet analyzed. Frequent timeouts
std/containers/sequences/deque/deque.modifiers/insert_iter_iter.pass.cpp SKIPPED

# Not yet analyzed. Failing after https://reviews.llvm.org/D75622.
std/re/re.const/re.matchflag/match_prev_avail.pass.cpp FAIL

# Not yet analyzed. Many diagnostics.
std/input.output/filesystems/class.path/path.member/path.charconv.pass.cpp FAIL

# Not yet analyzed. Probably ADL shenanigans.
std/algorithms/robust_against_adl.compile.pass.cpp FAIL
std/strings/basic.string/string.modifiers/robust_against_adl.pass.cpp FAIL
std/thread/thread.threads/thread.thread.class/thread.thread.constr/robust_against_adl.pass.cpp FAIL
std/utilities/function.objects/func.wrap/func.wrap.func/robust_against_adl.pass.cpp FAIL
std/utilities/function.objects/refwrap/refwrap.invoke/robust_against_adl.pass.cpp FAIL
std/utilities/variant/variant.visit/robust_against_adl.pass.cpp FAIL

# Not yet analyzed. Possibly C1XX constexpr bug.
std/utilities/function.objects/func.invoke/invoke_constexpr.pass.cpp:0 FAIL

# Not yet analyzed. Failing for "[a[.ch.]z]".
std/re/re.alg/re.alg.match/awk.locale.pass.cpp FAIL
std/re/re.alg/re.alg.match/basic.locale.pass.cpp FAIL
std/re/re.alg/re.alg.match/ecma.locale.pass.cpp FAIL
std/re/re.alg/re.alg.match/extended.locale.pass.cpp FAIL
std/re/re.alg/re.alg.search/awk.locale.pass.cpp FAIL
std/re/re.alg/re.alg.search/basic.locale.pass.cpp FAIL
std/re/re.alg/re.alg.search/ecma.locale.pass.cpp FAIL
std/re/re.alg/re.alg.search/extended.locale.pass.cpp FAIL

# Not yet analyzed. Various static_asserts.
std/utilities/variant/variant.variant/variant.assign/conv.pass.cpp FAIL
std/utilities/variant/variant.variant/variant.assign/T.pass.cpp FAIL
std/utilities/variant/variant.variant/variant.ctor/conv.pass.cpp FAIL
std/utilities/variant/variant.variant/variant.ctor/T.pass.cpp FAIL

# Not yet analyzed. Involves incomplete types.
std/utilities/memory/allocator.traits/allocator.traits.members/construct.pass.cpp FAIL
std/utilities/memory/allocator.traits/allocator.traits.members/destroy.pass.cpp FAIL

# Not yet analyzed. Error mentions allocator<const T>.
std/utilities/memory/specialized.algorithms/specialized.construct/construct_at.pass.cpp FAIL

# Not yet analyzed. Looks like deduction guide SFINAE failure.
std/containers/sequences/deque/deque.cons/deduct.pass.cpp FAIL
std/containers/sequences/forwardlist/forwardlist.cons/deduct.pass.cpp FAIL
std/containers/sequences/vector/vector.cons/deduct.pass.cpp FAIL

# Not yet analyzed. Seems to force a sign conversion error?
std/iterators/iterator.primitives/iterator.operations/advance.pass.cpp SKIPPED

# Not yet analyzed. Maybe Clang over-eagerly instantiating noexcept-specifier?
std/utilities/memory/unique.ptr/iterator_concept_conformance.compile.pass.cpp:1 SKIPPED

# Not yet analyzed. Assertion failed: std::abs((kurtosis - x_kurtosis) / x_kurtosis) < VARIOUS_VALUES
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.bin/eval.PR44847.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.geo/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.geo/eval.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.negbin/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.norm/rand.dist.norm.lognormal/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.norm/rand.dist.norm.lognormal/eval.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.norm/rand.dist.norm.t/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.norm/rand.dist.norm.t/eval.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.pois/rand.dist.pois.extreme/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.pois/rand.dist.pois.extreme/eval.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.pois/rand.dist.pois.gamma/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.pois/rand.dist.pois.gamma/eval.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.pois/rand.dist.pois.poisson/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.pois/rand.dist.pois.poisson/eval.pass.cpp FAIL

# Not yet analyzed. Assertion failed: std::abs((skew - x_skew) / x_skew) < 0.01
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.bin/eval_param.pass.cpp FAIL
std/numerics/rand/rand.dis/rand.dist.bern/rand.dist.bern.bin/eval.pass.cpp FAIL


# *** XFAILs WHICH PASS ***
# Nothing here! :-)
